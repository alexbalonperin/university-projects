classdef State1
    %STATE Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        
        V
        v
        s2
        s3
        Vtab
        policy
        pi
    end

    methods
        %contructor
        function obj=State1(s2,s3)
            
            obj.s2 = s2;
            obj.s3 = s3;
            obj.v = 0;
            obj.V = 0;
            obj.Vtab = [];
            %Value iteration
            obj.policy = 0;
            %Policy iteration
            obj.pi = 1;
            obj.policy_stable = true;

        end
        
        %methods
        
        %VALUE ITERATION
        function obj=calculateValue(obj)
            obj.v = obj.V;
            obj.V = max((Main.R12+ Main.gamma*obj.s2.V),(Main.R13+ Main.gamma*obj.s3.V)) ; 
            
        end
        
        function obj=calculatePolicy(obj)
            tab = [Main.R12+ Main.gamma*obj.s2.V, Main.R13+ Main.gamma*obj.s3.V];
            maximum = max(tab);
            indice = find(maximum==tab);
            obj.policy = indice;
        end
        
        %POLICY ITERATION
        function obj=policyEvaluation(obj)
           obj.v = obj.V;
           obj.V = (Main.R12+ Main.gamma*obj.s2.V)+(Main.R13+ Main.gamma*obj.s3.V);
        end
        
        function [obj policy_stable]=policyImprovement(obj, policy_stable)
            b = obj.pi;
            tab = [Main.R12+ Main.gamma*obj.s2.V, Main.R13+ Main.gamma*obj.s3.V];
            maximum = max(tab);
            indice = find(maximum==tab);
            obj.pi = indice;
            
            if obj.pi ~= b
                policy_stable = false;
            end
        end
        
        %accessors
        function obj=set.v(obj, newv)
            obj.v = newv;
        end
        function v=get.v(obj)
            v = obj.v;
        end
        function obj=set.V(obj, newV)
            obj.V = newV;
        end
        function V=get.V(obj)
            V = obj.V;
        end 
    end
    
end

